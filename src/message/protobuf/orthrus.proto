syntax = "proto3";

package orthrus.protobuf;

message Hey
{
  enum Platform
  {
    AMD64 = 0;
    CUDA = 1;
  }

  enum Kernel
  {
    Batched = 0;
    Hybrid = 1;
    SimpleHybrid = 2;
    SimplePiped = 3;
  }

  string ip = 1;
  uint32 port = 2;
  Platform platform = 3;
  Kernel kernel = 4;
}

message InitializeWorker
{
  string model_name = 1;
  message TierConcurrency
    {
      uint32 ranks = 1;
      uint32 concurrency_pre_att_size = 2;
      uint32 concurrency_att_size = 3;
      uint32 concurrency_post_att_size = 4;
      uint32 concurrency_cls_size = 5;
      uint32 max_context_count = 6;
    }
  repeated TierConcurrency tier_concurrency_s = 2;
  repeated bool slice_hosting_table = 3;
  repeated bool node_hosting_table = 4;
  uint32 slice_index = 5;
  int32 tier = 6;
  uint32 rank = 7;
  bool randomize = 8;
}

message ProcessPrompts { repeated string prompt_ids = 1; }

message PromptCompleted { repeated string prompt_ids = 1; }

message SetRoute
{
  message LayerToAddress
  {
    enum Stage
    {
      PreAttention = 0;
      Attention = 1;
      PostAttention = 2;
      Classification = 3;
    }

    uint32 layer_num = 1;
    Stage stage = 2;
    int32 tier = 3;
    uint32 rank = 4;
    string ip = 5;
    uint32 port = 6;
  }

  uint32 route_id = 1;
  repeated LayerToAddress layer_to_address = 2;
}

message AckRoute
{
  uint32 route_id = 1;
}

message WorkerStats
{
  uint64 states_received = 1;
  uint64 states_sent = 2;
  uint64 states_processed = 3;

  uint64 tokens_processed = 4;
  uint64 tokens_generated = 5;
  uint64 prompts_completed = 6;

  uint64 bytes_sent = 7;
  uint64 bytes_received = 8;
}

message PushDummyPrompts
{
  uint32 count = 1;
}

message Prompt
{
  string id = 1;
  uint32 temperature = 2;
  uint32 max_tokens = 3 [ json_name = "max_tokens" ];
  repeated uint32 prompt = 4 [ json_name = "prompt" ];
  repeated uint32 completion = 5 [ json_name = "completion" ];
  string prompt_text = 6 [ json_name = "prompt_text" ];
  string completion_text = 7 [ json_name = "completion_text" ];
  string user_data = 8 [ json_name = "user_data" ];
}

message PushPrompts { repeated Prompt prompts = 1; }

message PushCompletions { repeated Prompt completions = 1; }
